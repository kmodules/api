
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: resourcequotas.core
spec:
  group:
  names:
    kind: ResourceQuota
    listKind: ResourceQuotaList
    plural: resourcequotas
    singular: resourcequota
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ResourceQuota sets aggregate quota restrictions enforced per namespace
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
          type: object
        spec:
          description: Spec defines the desired quota. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
          properties:
            hard:
              additionalProperties:
                type: string
              description: 'hard is the set of desired hard limits for each named
                resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
              type: object
            scopeSelector:
              description: scopeSelector is also a collection of filters like scopes
                that must match each object tracked by a quota but expressed using
                ScopeSelectorOperator in combination with possible values. For a resource
                to match, both scopes AND scopeSelector (if specified in spec), must
                be matched.
              properties:
                matchExpressions:
                  description: A list of scope selector requirements by scope of the
                    resources.
                  items:
                    description: A scoped-resource selector requirement is a selector
                      that contains values, a scope name, and an operator that relates
                      the scope name and values.
                    properties:
                      operator:
                        description: Represents a scope's relationship to a set of
                          values. Valid operators are In, NotIn, Exists, DoesNotExist.
                        type: string
                      scopeName:
                        description: The name of the scope that the selector applies
                          to.
                        type: string
                      values:
                        description: An array of string values. If the operator is
                          In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - operator
                    - scopeName
                    type: object
                  type: array
              type: object
            scopes:
              description: A collection of filters that must match each object tracked
                by a quota. If not specified, the quota matches all objects.
              items:
                description: A ResourceQuotaScope defines a filter that must match
                  each object tracked by a quota
                type: string
              type: array
          type: object
        status:
          description: Status defines the actual enforced quota and its current usage.
            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
          properties:
            hard:
              additionalProperties:
                type: string
              description: 'Hard is the set of enforced hard limits for each named
                resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
              type: object
            used:
              additionalProperties:
                type: string
              description: Used is the current observed total usage of the resource
                in the namespace.
              type: object
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
